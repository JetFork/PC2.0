; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	E:\mywork\client\PC2.0TRUNK\PC2.0\third_party\libAMRPlayer\AMR\gmed_n.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	_gmed_n
; Function compile flags: /Ogtp
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\gmed_n.c
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\basicop2.c
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\gmed_n.c
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\basicop2.c
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\gmed_n.c
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\basicop2.c
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\gmed_n.c
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\basicop2.c
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\gmed_n.c
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\basicop2.c
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\gmed_n.c
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\basicop2.c
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\gmed_n.c
;	COMDAT _gmed_n
_TEXT	SEGMENT
_ind$1$ = -64						; size = 4
tv432 = -60						; size = 4
tv430 = -56						; size = 4
_ix$1$ = -52						; size = 4
_n$1$ = -46						; size = 2
_tmp$ = -44						; size = 18
_tmp2$ = -24						; size = 18
__$ArrayPad$ = -4					; size = 4
_gmed_n	PROC						; COMDAT
; _ind$ = ecx
; _n$ = dx

; 63   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	66 8b c2	 mov	 ax, dx

; 64   :     Word16 i, j, ix = 0;

  00013	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _ix$1$[ebp], 0
  0001a	8b d1		 mov	 edx, ecx
  0001c	66 89 45 d2	 mov	 WORD PTR _n$1$[ebp], ax

; 65   :     Word16 max;
; 66   :     Word16 medianIndex;
; 67   :     Word16 tmp[NMAX];
; 68   :     Word16 tmp2[NMAX];
; 69   : 
; 70   :     for (i = 0; i < n; i++)

  00020	33 c9		 xor	 ecx, ecx
  00022	89 55 c0	 mov	 DWORD PTR _ind$1$[ebp], edx
  00025	56		 push	 esi
  00026	57		 push	 edi
  00027	66 3b c8	 cmp	 cx, ax
  0002a	7d 11		 jge	 SHORT $LN10@gmed_n

; 64   :     Word16 i, j, ix = 0;

  0002c	0f b7 c8	 movzx	 ecx, ax
  0002f	8d 7d e8	 lea	 edi, DWORD PTR _tmp2$[ebp]
  00032	d1 e9		 shr	 ecx, 1
  00034	8b f2		 mov	 esi, edx
  00036	f3 a5		 rep movsd
  00038	13 c9		 adc	 ecx, ecx
  0003a	66 f3 a5	 rep movsw
$LN10@gmed_n:

; 71   :     {
; 72   :         tmp2[i] = ind[i];                                      move16 (); 
; 73   :     }
; 74   : 
; 75   :     for (i = 0; i < n; i++)

  0003d	33 c9		 xor	 ecx, ecx
  0003f	66 3b c8	 cmp	 cx, ax
  00042	0f 8d 82 00 00
	00		 jge	 $LN5@gmed_n
  00048	8d 4d d4	 lea	 ecx, DWORD PTR _tmp$[ebp]
  0004b	0f b7 c0	 movzx	 eax, ax
  0004e	89 4d c4	 mov	 DWORD PTR tv432[ebp], ecx
  00051	89 45 c8	 mov	 DWORD PTR tv430[ebp], eax
  00054	53		 push	 ebx
$LL7@gmed_n:

; 76   :     {
; 77   :         max = -32767;                                          move16 (); 

  00055	bb 01 80 ff ff	 mov	 ebx, -32767		; ffff8001H
  0005a	8d 75 e8	 lea	 esi, DWORD PTR _tmp2$[ebp]

; 78   :         for (j = 0; j < n; j++)

  0005d	33 d2		 xor	 edx, edx
  0005f	90		 npad	 1
$LL4@gmed_n:
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\basicop2.c

; 186  :     L_diff = (Word32) var1 - var2;

  00060	0f b7 3e	 movzx	 edi, WORD PTR [esi]
  00063	0f bf c7	 movsx	 eax, di
  00066	0f bf cb	 movsx	 ecx, bx
  00069	2b c1		 sub	 eax, ecx

; 79   :     if (L_var1 > 0X00007fffL)

  0006b	3d ff 7f 00 00	 cmp	 eax, 32767		; 00007fffH
  00070	7e 14		 jle	 SHORT $LN24@gmed_n
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\gmed_n.c

; 83   :                 max = tmp2[j];                                 move16 (); 

  00072	0f b7 ca	 movzx	 ecx, dx
  00075	8b df		 mov	 ebx, edi
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\basicop2.c

; 81   :         Overflow = 1;

  00077	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _Overflow, 1
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\gmed_n.c

; 84   :                 ix = j;                                        move16 (); 

  00081	89 4d cc	 mov	 DWORD PTR _ix$1$[ebp], ecx
  00084	eb 14		 jmp	 SHORT $LN3@gmed_n
$LN24@gmed_n:
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\basicop2.c

; 84   :     else if (L_var1 < (Word32) 0xffff8000L)

  00086	3d 00 80 ff ff	 cmp	 eax, -32768		; ffff8000H
  0008b	7d 4d		 jge	 SHORT $LN22@gmed_n

; 85   :     {
; 86   :         Overflow = 1;

  0008d	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _Overflow, 1
$LN72@gmed_n:
  00097	8b 4d cc	 mov	 ecx, DWORD PTR _ix$1$[ebp]
$LN3@gmed_n:
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\gmed_n.c

; 78   :         for (j = 0; j < n; j++)

  0009a	42		 inc	 edx
  0009b	83 c6 02	 add	 esi, 2
  0009e	66 3b 55 d2	 cmp	 dx, WORD PTR _n$1$[ebp]
  000a2	7c bc		 jl	 SHORT $LL4@gmed_n

; 85   :             }
; 86   :         }
; 87   :         tmp2[ix] = -32768;                                     move16 (); 
; 88   :         tmp[i] = ix;                                           move16 (); 

  000a4	8b 7d c4	 mov	 edi, DWORD PTR tv432[ebp]
  000a7	ba 00 80 ff ff	 mov	 edx, -32768		; ffff8000H
  000ac	0f bf c1	 movsx	 eax, cx
  000af	66 89 0f	 mov	 WORD PTR [edi], cx
  000b2	83 c7 02	 add	 edi, 2
  000b5	ff 4d c8	 dec	 DWORD PTR tv430[ebp]
  000b8	66 89 54 45 e8	 mov	 WORD PTR _tmp2$[ebp+eax*2], dx
  000bd	89 7d c4	 mov	 DWORD PTR tv432[ebp], edi
  000c0	75 93		 jne	 SHORT $LL7@gmed_n
  000c2	66 8b 45 d2	 mov	 ax, WORD PTR _n$1$[ebp]
  000c6	8b 55 c0	 mov	 edx, DWORD PTR _ind$1$[ebp]
  000c9	5b		 pop	 ebx
$LN5@gmed_n:
  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\basicop2.c

; 375  :             if (var1 < 0)

  000cc	66 85 c0	 test	 ax, ax
  000cf	79 18		 jns	 SHORT $LN38@gmed_n

; 376  :             {
; 377  :                 var_out = ~((~var1) >> var2);

  000d1	98		 cwde
  000d2	f7 d0		 not	 eax
  000d4	d1 f8		 sar	 eax, 1
  000d6	f7 d0		 not	 eax

; 378  :             }
; 379  :             else

  000d8	eb 12		 jmp	 SHORT $LN73@gmed_n
$LN22@gmed_n:
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\gmed_n.c

; 81   :             if (sub (tmp2[j], max) >= 0)

  000da	66 85 c0	 test	 ax, ax
  000dd	78 b8		 js	 SHORT $LN72@gmed_n

; 84   :                 ix = j;                                        move16 (); 

  000df	0f b7 ca	 movzx	 ecx, dx
  000e2	8b df		 mov	 ebx, edi
  000e4	89 4d cc	 mov	 DWORD PTR _ix$1$[ebp], ecx
  000e7	eb b1		 jmp	 SHORT $LN3@gmed_n
$LN38@gmed_n:
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\basicop2.c

; 381  :                 var_out = var1 >> var2;

  000e9	66 d1 f8	 sar	 ax, 1
$LN73@gmed_n:
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\gmed_n.c

; 93   : }

  000ec	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\basicop2.c

; 381  :                 var_out = var1 >> var2;

  000ef	0f b7 c0	 movzx	 eax, ax
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\gmed_n.c

; 93   : }

  000f2	33 cd		 xor	 ecx, ebp
  000f4	98		 cwde
  000f5	0f bf 44 45 d4	 movsx	 eax, WORD PTR _tmp$[ebp+eax*2]
  000fa	66 8b 04 42	 mov	 ax, WORD PTR [edx+eax*2]
  000fe	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00103	8b e5		 mov	 esp, ebp
  00105	5d		 pop	 ebp
  00106	c3		 ret	 0
_gmed_n	ENDP
_TEXT	ENDS
END
