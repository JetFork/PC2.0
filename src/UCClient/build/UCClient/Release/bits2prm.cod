; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	E:\mywork\client\PC2.0TRUNK\PC2.0\third_party\libAMRPlayer\AMR\bits2prm.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

	ORG $+2
_sort_102 DW	07H
	DW	06H
	DW	05H
	DW	04H
	DW	03H
	DW	02H
	DW	01H
	DW	00H
	DW	010H
	DW	0fH
	DW	0eH
	DW	0dH
	DW	0cH
	DW	0bH
	DW	0aH
	DW	09H
	DW	08H
	DW	01aH
	DW	01bH
	DW	01cH
	DW	01dH
	DW	01eH
	DW	01fH
	DW	073H
	DW	074H
	DW	075H
	DW	076H
	DW	077H
	DW	078H
	DW	048H
	DW	049H
	DW	0a1H
	DW	0a2H
	DW	041H
	DW	044H
	DW	045H
	DW	06cH
	DW	06fH
	DW	070H
	DW	09aH
	DW	09dH
	DW	09eH
	DW	0c5H
	DW	0c8H
	DW	0c9H
	DW	020H
	DW	021H
	DW	079H
	DW	07aH
	DW	04aH
	DW	04bH
	DW	0a3H
	DW	0a4H
	DW	042H
	DW	06dH
	DW	09bH
	DW	0c6H
	DW	013H
	DW	017H
	DW	015H
	DW	016H
	DW	012H
	DW	011H
	DW	014H
	DW	018H
	DW	019H
	DW	025H
	DW	024H
	DW	023H
	DW	022H
	DW	050H
	DW	04fH
	DW	04eH
	DW	04dH
	DW	07eH
	DW	07dH
	DW	07cH
	DW	07bH
	DW	0a9H
	DW	0a8H
	DW	0a7H
	DW	0a6H
	DW	046H
	DW	043H
	DW	047H
	DW	071H
	DW	06eH
	DW	072H
	DW	09fH
	DW	09cH
	DW	0a0H
	DW	0caH
	DW	0c7H
	DW	0cbH
	DW	04cH
	DW	0a5H
	DW	051H
	DW	052H
	DW	05cH
	DW	05bH
	DW	05dH
	DW	053H
	DW	05fH
	DW	055H
	DW	054H
	DW	05eH
	DW	065H
	DW	066H
	DW	060H
	DW	068H
	DW	056H
	DW	067H
	DW	057H
	DW	061H
	DW	07fH
	DW	080H
	DW	08aH
	DW	089H
	DW	08bH
	DW	081H
	DW	08dH
	DW	083H
	DW	082H
	DW	08cH
	DW	093H
	DW	094H
	DW	08eH
	DW	096H
	DW	084H
	DW	095H
	DW	085H
	DW	08fH
	DW	0aaH
	DW	0abH
	DW	0b5H
	DW	0b4H
	DW	0b6H
	DW	0acH
	DW	0b8H
	DW	0aeH
	DW	0adH
	DW	0b7H
	DW	0beH
	DW	0bfH
	DW	0b9H
	DW	0c1H
	DW	0afH
	DW	0c0H
	DW	0b0H
	DW	0baH
	DW	026H
	DW	027H
	DW	031H
	DW	030H
	DW	032H
	DW	028H
	DW	034H
	DW	02aH
	DW	029H
	DW	033H
	DW	03aH
	DW	03bH
	DW	035H
	DW	03dH
	DW	02bH
	DW	03cH
	DW	02cH
	DW	036H
	DW	0c2H
	DW	0b3H
	DW	0bdH
	DW	0c4H
	DW	0b1H
	DW	0c3H
	DW	0b2H
	DW	0bbH
	DW	0bcH
	DW	097H
	DW	088H
	DW	092H
	DW	099H
	DW	086H
	DW	098H
	DW	087H
	DW	090H
	DW	091H
	DW	069H
	DW	05aH
	DW	064H
	DW	06bH
	DW	058H
	DW	06aH
	DW	059H
	DW	062H
	DW	063H
	DW	03eH
	DW	02fH
	DW	039H
	DW	040H
	DW	02dH
	DW	03fH
	DW	02eH
	DW	037H
	DW	038H
_sort_122 DW	00H
	DW	01H
	DW	02H
	DW	03H
	DW	04H
	DW	05H
	DW	06H
	DW	07H
	DW	08H
	DW	09H
	DW	0aH
	DW	0bH
	DW	0cH
	DW	0dH
	DW	0eH
	DW	017H
	DW	0fH
	DW	010H
	DW	011H
	DW	012H
	DW	013H
	DW	014H
	DW	015H
	DW	016H
	DW	018H
	DW	019H
	DW	01aH
	DW	01bH
	DW	01cH
	DW	026H
	DW	08dH
	DW	027H
	DW	08eH
	DW	028H
	DW	08fH
	DW	029H
	DW	090H
	DW	02aH
	DW	091H
	DW	02bH
	DW	092H
	DW	02cH
	DW	093H
	DW	02dH
	DW	094H
	DW	02eH
	DW	095H
	DW	02fH
	DW	061H
	DW	096H
	DW	0c8H
	DW	030H
	DW	062H
	DW	097H
	DW	0c9H
	DW	031H
	DW	063H
	DW	098H
	DW	0caH
	DW	056H
	DW	088H
	DW	0bdH
	DW	0efH
	DW	057H
	DW	089H
	DW	0beH
	DW	0f0H
	DW	058H
	DW	08aH
	DW	0bfH
	DW	0f1H
	DW	05bH
	DW	0c2H
	DW	05cH
	DW	0c3H
	DW	05dH
	DW	0c4H
	DW	05eH
	DW	0c5H
	DW	05fH
	DW	0c6H
	DW	01dH
	DW	01eH
	DW	01fH
	DW	020H
	DW	021H
	DW	022H
	DW	023H
	DW	032H
	DW	064H
	DW	099H
	DW	0cbH
	DW	059H
	DW	08bH
	DW	0c0H
	DW	0f2H
	DW	033H
	DW	065H
	DW	09aH
	DW	0ccH
	DW	037H
	DW	069H
	DW	09eH
	DW	0d0H
	DW	05aH
	DW	08cH
	DW	0c1H
	DW	0f3H
	DW	03bH
	DW	06dH
	DW	0a2H
	DW	0d4H
	DW	03fH
	DW	071H
	DW	0a6H
	DW	0d8H
	DW	043H
	DW	075H
	DW	0aaH
	DW	0dcH
	DW	024H
	DW	025H
	DW	036H
	DW	035H
	DW	034H
	DW	03aH
	DW	039H
	DW	038H
	DW	03eH
	DW	03dH
	DW	03cH
	DW	042H
	DW	041H
	DW	040H
	DW	046H
	DW	045H
	DW	044H
	DW	068H
	DW	067H
	DW	066H
	DW	06cH
	DW	06bH
	DW	06aH
	DW	070H
	DW	06fH
	DW	06eH
	DW	074H
	DW	073H
	DW	072H
	DW	078H
	DW	077H
	DW	076H
	DW	09dH
	DW	09cH
	DW	09bH
	DW	0a1H
	DW	0a0H
	DW	09fH
	DW	0a5H
	DW	0a4H
	DW	0a3H
	DW	0a9H
	DW	0a8H
	DW	0a7H
	DW	0adH
	DW	0acH
	DW	0abH
	DW	0cfH
	DW	0ceH
	DW	0cdH
	DW	0d3H
	DW	0d2H
	DW	0d1H
	DW	0d7H
	DW	0d6H
	DW	0d5H
	DW	0dbH
	DW	0daH
	DW	0d9H
	DW	0dfH
	DW	0deH
	DW	0ddH
	DW	049H
	DW	048H
	DW	047H
	DW	04cH
	DW	04bH
	DW	04aH
	DW	04fH
	DW	04eH
	DW	04dH
	DW	052H
	DW	051H
	DW	050H
	DW	055H
	DW	054H
	DW	053H
	DW	07bH
	DW	07aH
	DW	079H
	DW	07eH
	DW	07dH
	DW	07cH
	DW	081H
	DW	080H
	DW	07fH
	DW	084H
	DW	083H
	DW	082H
	DW	087H
	DW	086H
	DW	085H
	DW	0b0H
	DW	0afH
	DW	0aeH
	DW	0b3H
	DW	0b2H
	DW	0b1H
	DW	0b6H
	DW	0b5H
	DW	0b4H
	DW	0b9H
	DW	0b8H
	DW	0b7H
	DW	0bcH
	DW	0bbH
	DW	0baH
	DW	0e2H
	DW	0e1H
	DW	0e0H
	DW	0e5H
	DW	0e4H
	DW	0e3H
	DW	0e8H
	DW	0e7H
	DW	0e6H
	DW	0ebH
	DW	0eaH
	DW	0e9H
	DW	0eeH
	DW	0edH
	DW	0ecH
	DW	060H
	DW	0c7H
_sort_59 DW	00H
	DW	01H
	DW	04H
	DW	05H
	DW	03H
	DW	06H
	DW	07H
	DW	02H
	DW	0dH
	DW	0fH
	DW	08H
	DW	09H
	DW	0bH
	DW	0cH
	DW	0eH
	DW	0aH
	DW	010H
	DW	01cH
	DW	04aH
	DW	01dH
	DW	04bH
	DW	01bH
	DW	049H
	DW	01aH
	DW	048H
	DW	01eH
	DW	04cH
	DW	033H
	DW	061H
	DW	032H
	DW	047H
	DW	060H
	DW	075H
	DW	01fH
	DW	04dH
	DW	034H
	DW	062H
	DW	031H
	DW	046H
	DW	05fH
	DW	074H
	DW	035H
	DW	063H
	DW	020H
	DW	04eH
	DW	021H
	DW	04fH
	DW	030H
	DW	045H
	DW	05eH
	DW	073H
	DW	02fH
	DW	044H
	DW	05dH
	DW	072H
	DW	02eH
	DW	043H
	DW	05cH
	DW	071H
	DW	013H
	DW	015H
	DW	017H
	DW	016H
	DW	012H
	DW	011H
	DW	014H
	DW	018H
	DW	06fH
	DW	02bH
	DW	059H
	DW	06eH
	DW	040H
	DW	041H
	DW	02cH
	DW	05aH
	DW	019H
	DW	02dH
	DW	042H
	DW	05bH
	DW	070H
	DW	036H
	DW	064H
	DW	028H
	DW	03dH
	DW	056H
	DW	06bH
	DW	027H
	DW	03cH
	DW	055H
	DW	06aH
	DW	024H
	DW	039H
	DW	052H
	DW	067H
	DW	023H
	DW	038H
	DW	051H
	DW	066H
	DW	022H
	DW	037H
	DW	050H
	DW	065H
	DW	02aH
	DW	03fH
	DW	058H
	DW	06dH
	DW	029H
	DW	03eH
	DW	057H
	DW	06cH
	DW	026H
	DW	03bH
	DW	054H
	DW	069H
	DW	025H
	DW	03aH
	DW	053H
	DW	068H
	ORG $+4
_sort_795 DW	08H
	DW	07H
	DW	06H
	DW	05H
	DW	04H
	DW	03H
	DW	02H
	DW	0eH
	DW	010H
	DW	09H
	DW	0aH
	DW	0cH
	DW	0dH
	DW	0fH
	DW	0bH
	DW	011H
	DW	014H
	DW	016H
	DW	018H
	DW	017H
	DW	013H
	DW	012H
	DW	015H
	DW	038H
	DW	058H
	DW	07aH
	DW	09aH
	DW	039H
	DW	059H
	DW	07bH
	DW	09bH
	DW	03aH
	DW	05aH
	DW	07cH
	DW	09cH
	DW	034H
	DW	054H
	DW	076H
	DW	096H
	DW	035H
	DW	055H
	DW	077H
	DW	097H
	DW	01bH
	DW	05dH
	DW	01cH
	DW	05eH
	DW	01dH
	DW	05fH
	DW	01eH
	DW	060H
	DW	01fH
	DW	061H
	DW	03dH
	DW	07fH
	DW	03eH
	DW	080H
	DW	03fH
	DW	081H
	DW	03bH
	DW	05bH
	DW	07dH
	DW	09dH
	DW	020H
	DW	062H
	DW	040H
	DW	082H
	DW	01H
	DW	00H
	DW	019H
	DW	01aH
	DW	021H
	DW	063H
	DW	022H
	DW	064H
	DW	041H
	DW	083H
	DW	042H
	DW	084H
	DW	036H
	DW	056H
	DW	078H
	DW	098H
	DW	03cH
	DW	05cH
	DW	07eH
	DW	09eH
	DW	037H
	DW	057H
	DW	079H
	DW	099H
	DW	075H
	DW	074H
	DW	073H
	DW	02eH
	DW	04eH
	DW	070H
	DW	090H
	DW	02bH
	DW	04bH
	DW	06dH
	DW	08dH
	DW	028H
	DW	048H
	DW	06aH
	DW	08aH
	DW	024H
	DW	044H
	DW	066H
	DW	086H
	DW	072H
	DW	095H
	DW	094H
	DW	093H
	DW	092H
	DW	053H
	DW	052H
	DW	051H
	DW	050H
	DW	033H
	DW	032H
	DW	031H
	DW	030H
	DW	02fH
	DW	02dH
	DW	02cH
	DW	02aH
	DW	027H
	DW	023H
	DW	04fH
	DW	04dH
	DW	04cH
	DW	04aH
	DW	047H
	DW	043H
	DW	071H
	DW	06fH
	DW	06eH
	DW	06cH
	DW	069H
	DW	065H
	DW	091H
	DW	08fH
	DW	08eH
	DW	08cH
	DW	089H
	DW	085H
	DW	029H
	DW	049H
	DW	06bH
	DW	08bH
	DW	025H
	DW	045H
	DW	067H
	DW	087H
	DW	026H
	DW	046H
	DW	068H
	DW	088H
	ORG $+2
_sort_475 DW	00H
	DW	01H
	DW	02H
	DW	03H
	DW	04H
	DW	05H
	DW	06H
	DW	07H
	DW	08H
	DW	09H
	DW	0aH
	DW	0bH
	DW	0cH
	DW	0dH
	DW	0eH
	DW	0fH
	DW	017H
	DW	018H
	DW	019H
	DW	01aH
	DW	01bH
	DW	01cH
	DW	030H
	DW	031H
	DW	03dH
	DW	03eH
	DW	052H
	DW	053H
	DW	02fH
	DW	02eH
	DW	02dH
	DW	02cH
	DW	051H
	DW	050H
	DW	04fH
	DW	04eH
	DW	011H
	DW	012H
	DW	014H
	DW	016H
	DW	04dH
	DW	04cH
	DW	04bH
	DW	04aH
	DW	01dH
	DW	01eH
	DW	02bH
	DW	02aH
	DW	029H
	DW	028H
	DW	026H
	DW	027H
	DW	010H
	DW	013H
	DW	015H
	DW	032H
	DW	033H
	DW	03bH
	DW	03cH
	DW	03fH
	DW	040H
	DW	048H
	DW	049H
	DW	054H
	DW	055H
	DW	05dH
	DW	05eH
	DW	020H
	DW	021H
	DW	023H
	DW	024H
	DW	035H
	DW	036H
	DW	038H
	DW	039H
	DW	042H
	DW	043H
	DW	045H
	DW	046H
	DW	057H
	DW	058H
	DW	05aH
	DW	05bH
	DW	022H
	DW	037H
	DW	044H
	DW	059H
	DW	025H
	DW	03aH
	DW	047H
	DW	05cH
	DW	01fH
	DW	034H
	DW	041H
	DW	056H
	ORG $+2
_sort_67 DW	00H
	DW	01H
	DW	04H
	DW	03H
	DW	05H
	DW	06H
	DW	0dH
	DW	07H
	DW	02H
	DW	08H
	DW	09H
	DW	0bH
	DW	0fH
	DW	0cH
	DW	0eH
	DW	0aH
	DW	01cH
	DW	052H
	DW	01dH
	DW	053H
	DW	01bH
	DW	051H
	DW	01aH
	DW	050H
	DW	01eH
	DW	054H
	DW	010H
	DW	037H
	DW	06dH
	DW	038H
	DW	06eH
	DW	01fH
	DW	055H
	DW	039H
	DW	06fH
	DW	030H
	DW	049H
	DW	066H
	DW	07fH
	DW	020H
	DW	056H
	DW	033H
	DW	04cH
	DW	069H
	DW	082H
	DW	034H
	DW	04dH
	DW	06aH
	DW	083H
	DW	03aH
	DW	070H
	DW	021H
	DW	057H
	DW	013H
	DW	017H
	DW	035H
	DW	04eH
	DW	06bH
	DW	084H
	DW	015H
	DW	016H
	DW	012H
	DW	011H
	DW	014H
	DW	018H
	DW	019H
	DW	032H
	DW	04bH
	DW	068H
	DW	081H
	DW	02fH
	DW	048H
	DW	065H
	DW	07eH
	DW	036H
	DW	04fH
	DW	06cH
	DW	085H
	DW	02eH
	DW	047H
	DW	064H
	DW	07dH
	DW	080H
	DW	067H
	DW	04aH
	DW	031H
	DW	02dH
	DW	046H
	DW	063H
	DW	07cH
	DW	02aH
	DW	043H
	DW	060H
	DW	079H
	DW	027H
	DW	040H
	DW	05dH
	DW	076H
	DW	026H
	DW	03fH
	DW	05cH
	DW	075H
	DW	023H
	DW	03cH
	DW	059H
	DW	072H
	DW	022H
	DW	03bH
	DW	058H
	DW	071H
	DW	02cH
	DW	045H
	DW	062H
	DW	07bH
	DW	02bH
	DW	044H
	DW	061H
	DW	07aH
	DW	029H
	DW	042H
	DW	05fH
	DW	078H
	DW	028H
	DW	041H
	DW	05eH
	DW	077H
	DW	025H
	DW	03eH
	DW	05bH
	DW	074H
	DW	024H
	DW	03dH
	DW	05aH
	DW	073H
	ORG $+4
_sort_SID DW	00H
	DW	01H
	DW	02H
	DW	03H
	DW	04H
	DW	05H
	DW	06H
	DW	07H
	DW	08H
	DW	09H
	DW	0aH
	DW	0bH
	DW	0cH
	DW	0dH
	DW	0eH
	DW	0fH
	DW	010H
	DW	011H
	DW	012H
	DW	013H
	DW	014H
	DW	015H
	DW	016H
	DW	017H
	DW	018H
	DW	019H
	DW	01aH
	DW	01bH
	DW	01cH
	DW	01dH
	DW	01eH
	DW	01fH
	DW	020H
	DW	021H
	DW	022H
	ORG $+2
_sort_74 DW	00H
	DW	01H
	DW	02H
	DW	03H
	DW	04H
	DW	05H
	DW	06H
	DW	07H
	DW	08H
	DW	09H
	DW	0aH
	DW	0bH
	DW	0cH
	DW	0dH
	DW	0eH
	DW	0fH
	DW	010H
	DW	01aH
	DW	057H
	DW	01bH
	DW	058H
	DW	01cH
	DW	059H
	DW	01dH
	DW	05aH
	DW	01eH
	DW	05bH
	DW	033H
	DW	050H
	DW	070H
	DW	08dH
	DW	034H
	DW	051H
	DW	071H
	DW	08eH
	DW	036H
	DW	053H
	DW	073H
	DW	090H
	DW	037H
	DW	054H
	DW	074H
	DW	091H
	DW	03aH
	DW	077H
	DW	03bH
	DW	078H
	DW	015H
	DW	016H
	DW	017H
	DW	011H
	DW	012H
	DW	013H
	DW	01fH
	DW	03cH
	DW	05cH
	DW	079H
	DW	038H
	DW	055H
	DW	075H
	DW	092H
	DW	014H
	DW	018H
	DW	019H
	DW	032H
	DW	04fH
	DW	06fH
	DW	08cH
	DW	039H
	DW	056H
	DW	076H
	DW	093H
	DW	031H
	DW	04eH
	DW	06eH
	DW	08bH
	DW	030H
	DW	04dH
	DW	035H
	DW	052H
	DW	072H
	DW	08fH
	DW	06dH
	DW	08aH
	DW	02fH
	DW	04cH
	DW	06cH
	DW	089H
	DW	020H
	DW	021H
	DW	03dH
	DW	03eH
	DW	05dH
	DW	05eH
	DW	07aH
	DW	07bH
	DW	029H
	DW	02aH
	DW	02bH
	DW	02cH
	DW	02dH
	DW	02eH
	DW	046H
	DW	047H
	DW	048H
	DW	049H
	DW	04aH
	DW	04bH
	DW	066H
	DW	067H
	DW	068H
	DW	069H
	DW	06aH
	DW	06bH
	DW	083H
	DW	084H
	DW	085H
	DW	086H
	DW	087H
	DW	088H
	DW	022H
	DW	03fH
	DW	05fH
	DW	07cH
	DW	023H
	DW	040H
	DW	060H
	DW	07dH
	DW	024H
	DW	041H
	DW	061H
	DW	07eH
	DW	025H
	DW	042H
	DW	062H
	DW	07fH
	DW	026H
	DW	043H
	DW	063H
	DW	080H
	DW	027H
	DW	044H
	DW	064H
	DW	081H
	DW	028H
	DW	045H
	DW	065H
	DW	082H
_sort_515 DW	07H
	DW	06H
	DW	05H
	DW	04H
	DW	03H
	DW	02H
	DW	01H
	DW	00H
	DW	0fH
	DW	0eH
	DW	0dH
	DW	0cH
	DW	0bH
	DW	0aH
	DW	09H
	DW	08H
	DW	017H
	DW	018H
	DW	019H
	DW	01aH
	DW	01bH
	DW	02eH
	DW	041H
	DW	054H
	DW	02dH
	DW	02cH
	DW	02bH
	DW	040H
	DW	03fH
	DW	03eH
	DW	053H
	DW	052H
	DW	051H
	DW	066H
	DW	065H
	DW	064H
	DW	02aH
	DW	03dH
	DW	050H
	DW	063H
	DW	01cH
	DW	02fH
	DW	042H
	DW	055H
	DW	012H
	DW	029H
	DW	03cH
	DW	04fH
	DW	062H
	DW	01dH
	DW	030H
	DW	043H
	DW	011H
	DW	014H
	DW	016H
	DW	028H
	DW	03bH
	DW	04eH
	DW	061H
	DW	015H
	DW	01eH
	DW	031H
	DW	044H
	DW	056H
	DW	013H
	DW	010H
	DW	057H
	DW	027H
	DW	026H
	DW	03aH
	DW	039H
	DW	04dH
	DW	023H
	DW	036H
	DW	049H
	DW	05cH
	DW	04cH
	DW	060H
	DW	05fH
	DW	024H
	DW	037H
	DW	04aH
	DW	05dH
	DW	020H
	DW	033H
	DW	021H
	DW	034H
	DW	046H
	DW	047H
	DW	059H
	DW	05aH
	DW	01fH
	DW	032H
	DW	045H
	DW	058H
	DW	025H
	DW	038H
	DW	04bH
	DW	05eH
	DW	022H
	DW	035H
	DW	048H
	DW	05bH
	ORG $+2
_bitno_MR475 DW	08H
	DW	08H
	DW	07H
	DW	08H
	DW	07H
	DW	02H
	DW	08H
	DW	04H
	DW	07H
	DW	02H
	DW	04H
	DW	07H
	DW	02H
	DW	08H
	DW	04H
	DW	07H
	DW	02H
	ORG $+2
_bitno_MR74 DW	08H
	DW	09H
	DW	09H
	DW	08H
	DW	0dH
	DW	04H
	DW	07H
	DW	05H
	DW	0dH
	DW	04H
	DW	07H
	DW	08H
	DW	0dH
	DW	04H
	DW	07H
	DW	05H
	DW	0dH
	DW	04H
	DW	07H
_prmno	DW	011H
	DW	013H
	DW	013H
	DW	013H
	DW	013H
	DW	017H
	DW	027H
	DW	039H
	DW	05H
	ORG $+2
_bitno_MR795 DW	09H
	DW	09H
	DW	09H
	DW	08H
	DW	0dH
	DW	04H
	DW	04H
	DW	05H
	DW	06H
	DW	0dH
	DW	04H
	DW	04H
	DW	05H
	DW	08H
	DW	0dH
	DW	04H
	DW	04H
	DW	05H
	DW	06H
	DW	0dH
	DW	04H
	DW	04H
	DW	05H
	ORG $+2
_bitno_MR67 DW	08H
	DW	09H
	DW	09H
	DW	08H
	DW	0bH
	DW	03H
	DW	07H
	DW	04H
	DW	0bH
	DW	03H
	DW	07H
	DW	08H
	DW	0bH
	DW	03H
	DW	07H
	DW	04H
	DW	0bH
	DW	03H
	DW	07H
	ORG $+2
_bitno_MRDTX DW	03H
	DW	08H
	DW	09H
	DW	09H
	DW	06H
	ORG $+2
_bitno_MR122 DW	07H
	DW	08H
	DW	09H
	DW	08H
	DW	06H
	DW	09H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	03H
	DW	03H
	DW	03H
	DW	03H
	DW	03H
	DW	05H
	DW	06H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	03H
	DW	03H
	DW	03H
	DW	03H
	DW	03H
	DW	05H
	DW	09H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	03H
	DW	03H
	DW	03H
	DW	03H
	DW	03H
	DW	05H
	DW	06H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	04H
	DW	03H
	DW	03H
	DW	03H
	DW	03H
	DW	03H
	DW	05H
	ORG $+2
_bitno_MR59 DW	08H
	DW	09H
	DW	09H
	DW	08H
	DW	09H
	DW	02H
	DW	06H
	DW	04H
	DW	09H
	DW	02H
	DW	06H
	DW	08H
	DW	09H
	DW	02H
	DW	06H
	DW	04H
	DW	09H
	DW	02H
	DW	06H
	ORG $+2
_bitno_MR515 DW	08H
	DW	08H
	DW	07H
	DW	08H
	DW	07H
	DW	02H
	DW	06H
	DW	04H
	DW	07H
	DW	02H
	DW	06H
	DW	04H
	DW	07H
	DW	02H
	DW	06H
	DW	04H
	DW	07H
	DW	02H
	DW	06H
	ORG $+2
_bitno_MR102 DW	08H
	DW	09H
	DW	09H
	DW	08H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	0aH
	DW	0aH
	DW	07H
	DW	07H
	DW	05H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	0aH
	DW	0aH
	DW	07H
	DW	07H
	DW	08H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	0aH
	DW	0aH
	DW	07H
	DW	07H
	DW	05H
	DW	01H
	DW	01H
	DW	01H
	DW	01H
	DW	0aH
	DW	0aH
	DW	07H
	DW	07H
	ORG $+2
_bitno	DD	FLAT:_bitno_MR475
	DD	FLAT:_bitno_MR515
	DD	FLAT:_bitno_MR59
	DD	FLAT:_bitno_MR67
	DD	FLAT:_bitno_MR74
	DD	FLAT:_bitno_MR795
	DD	FLAT:_bitno_MR102
	DD	FLAT:_bitno_MR122
	DD	FLAT:_bitno_MRDTX
PUBLIC	_Bits2prm
; Function compile flags: /Ogtp
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\bits2prm.c
;	COMDAT _Bits2prm
_TEXT	SEGMENT
tv245 = -4						; size = 4
_prm$ = 8						; size = 4
_Bits2prm PROC						; COMDAT
; _mode$ = ecx
; _bits$ = edx

; 94   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	0f b7 04 4d 00
	00 00 00	 movzx	 eax, WORD PTR _prmno[ecx*2]
  0000c	57		 push	 edi
  0000d	8b fa		 mov	 edi, edx

; 95   :     Word16 i;
; 96   : 
; 97   :     move16();           /* account for pointer init (bitno[mode])  */
; 98   :     
; 99   :     for (i = 0; i < prmno[mode]; i++)

  0000f	33 d2		 xor	 edx, edx
  00011	66 3b d0	 cmp	 dx, ax
  00014	7d 40		 jge	 SHORT $LN1@Bits2prm

; 100  :     {
; 101  :         prm[i] = Bin2int (bitno[mode][i], bits);      move16 (); 

  00016	8b 0c 8d 00 00
	00 00		 mov	 ecx, DWORD PTR _bitno[ecx*4]
  0001d	53		 push	 ebx
  0001e	56		 push	 esi
  0001f	89 4d fc	 mov	 DWORD PTR tv245[ebp], ecx
  00022	33 f6		 xor	 esi, esi
  00024	8b d8		 mov	 ebx, eax
  00026	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$LL3@Bits2prm:
  00030	66 8b 0c 0e	 mov	 cx, WORD PTR [esi+ecx]
  00034	8b d7		 mov	 edx, edi
  00036	e8 00 00 00 00	 call	 _Bin2int
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR _prm$[ebp]
  0003e	8d 76 02	 lea	 esi, DWORD PTR [esi+2]
  00041	66 89 44 0e fe	 mov	 WORD PTR [esi+ecx-2], ax

; 102  :         bits += bitno[mode][i];

  00046	8b 4d fc	 mov	 ecx, DWORD PTR tv245[ebp]
  00049	0f bf 44 0e fe	 movsx	 eax, WORD PTR [esi+ecx-2]
  0004e	8d 3c 47	 lea	 edi, DWORD PTR [edi+eax*2]
  00051	4b		 dec	 ebx
  00052	75 dc		 jne	 SHORT $LL3@Bits2prm
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
$LN1@Bits2prm:
  00056	5f		 pop	 edi

; 103  :         add(0,0);       /* account for above pointer update  */
; 104  :     }
; 105  :     
; 106  :    return;
; 107  : }

  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
_Bits2prm ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\bits2prm.c
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\basicop2.c
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\bits2prm.c
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\basicop2.c
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\bits2prm.c
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\basicop2.c
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\bits2prm.c
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\basicop2.c
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\bits2prm.c
;	COMDAT _Bin2int
_TEXT	SEGMENT
_Bin2int PROC						; COMDAT
; _no_of_bits$ = cx
; _bitstream$ = edx

; 60   : {

  00000	56		 push	 esi

; 64   :     for (i = 0; i < no_of_bits; i++)

  00001	33 c0		 xor	 eax, eax
  00003	33 f6		 xor	 esi, esi
  00005	66 3b c1	 cmp	 ax, cx
  00008	0f 8d ac 00 00
	00		 jge	 $LN2@Bin2int

; 61   :     Word16 value, i, bit;
; 62   : 
; 63   :     value = 0;                                  move16 (); 

  0000e	53		 push	 ebx
  0000f	57		 push	 edi
  00010	0f b7 f9	 movzx	 edi, cx
  00013	bb ff 7f 00 00	 mov	 ebx, 32767		; 00007fffH
$LL4@Bin2int:
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\basicop2.c

; 298  :         result = (Word32) var1 *((Word32) 1 << var2);

  00018	0f bf ce	 movsx	 ecx, si
  0001b	03 c9		 add	 ecx, ecx

; 299  : 
; 300  :         if ((var2 > 15 && var1 != 0) || (result != (Word32) ((Word16) result)))

  0001d	0f bf c1	 movsx	 eax, cx
  00020	3b c8		 cmp	 ecx, eax
  00022	74 1a		 je	 SHORT $LN12@Bin2int

; 301  :         {
; 302  :             Overflow = 1;
; 303  :             var_out = (var1 > 0) ? MAX_16 : MIN_16;

  00024	66 85 f6	 test	 si, si
  00027	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _Overflow, 1
  00031	b8 00 80 ff ff	 mov	 eax, -32768		; ffff8000H
  00036	0f 4f c3	 cmovg	 eax, ebx
  00039	0f b7 c8	 movzx	 ecx, ax

; 304  :         }
; 305  :         else

  0003c	eb 03		 jmp	 SHORT $LN9@Bin2int
$LN12@Bin2int:

; 306  :         {
; 307  :             var_out = extract_l (result);

  0003e	0f b7 c9	 movzx	 ecx, cx
$LN9@Bin2int:
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\bits2prm.c

; 67   :         bit = *bitstream++;                     move16 (); 

  00041	0f b7 02	 movzx	 eax, WORD PTR [edx]
  00044	83 c2 02	 add	 edx, 2
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\basicop2.c

; 186  :     L_diff = (Word32) var1 - var2;

  00047	98		 cwde
  00048	48		 dec	 eax
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\bits2prm.c

; 66   :         value = shl (value, 1);

  00049	0f b7 f1	 movzx	 esi, cx
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\basicop2.c

; 79   :     if (L_var1 > 0X00007fffL)

  0004c	3d ff 7f 00 00	 cmp	 eax, 32767		; 00007fffH
  00051	7e 0c		 jle	 SHORT $LN38@Bin2int

; 80   :     {
; 81   :         Overflow = 1;

  00053	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _Overflow, 1

; 82   :         var_out = MAX_16;

  0005d	eb 4f		 jmp	 SHORT $LN3@Bin2int
$LN38@Bin2int:

; 83   :     }
; 84   :     else if (L_var1 < (Word32) 0xffff8000L)

  0005f	3d 00 80 ff ff	 cmp	 eax, -32768		; ffff8000H
  00064	7d 0c		 jge	 SHORT $LN36@Bin2int

; 85   :     {
; 86   :         Overflow = 1;

  00066	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _Overflow, 1

; 88   :     }
; 89   :     else

  00070	eb 3c		 jmp	 SHORT $LN3@Bin2int
$LN36@Bin2int:
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\bits2prm.c

; 69   :         if (sub (bit, BIT_1) == 0)

  00072	66 85 c0	 test	 ax, ax
  00075	75 37		 jne	 SHORT $LN3@Bin2int
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\basicop2.c

; 139  :     L_sum = (Word32) var1 + var2;

  00077	0f bf c1	 movsx	 eax, cx
  0007a	40		 inc	 eax

; 79   :     if (L_var1 > 0X00007fffL)

  0007b	3d ff 7f 00 00	 cmp	 eax, 32767		; 00007fffH
  00080	7e 0e		 jle	 SHORT $LN48@Bin2int

; 80   :     {
; 81   :         Overflow = 1;

  00082	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _Overflow, 1

; 82   :         var_out = MAX_16;

  0008c	8b c3		 mov	 eax, ebx
  0008e	eb 1b		 jmp	 SHORT $LN45@Bin2int
$LN48@Bin2int:

; 83   :     }
; 84   :     else if (L_var1 < (Word32) 0xffff8000L)

  00090	3d 00 80 ff ff	 cmp	 eax, -32768		; ffff8000H
  00095	7d 11		 jge	 SHORT $LN46@Bin2int

; 85   :     {
; 86   :         Overflow = 1;

  00097	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _Overflow, 1

; 87   :         var_out = MIN_16;

  000a1	b8 00 80 ff ff	 mov	 eax, -32768		; ffff8000H

; 88   :     }
; 89   :     else

  000a6	eb 03		 jmp	 SHORT $LN45@Bin2int
$LN46@Bin2int:

; 90   :     {
; 91   :         var_out = extract_l (L_var1);

  000a8	0f b7 c0	 movzx	 eax, ax
$LN45@Bin2int:
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\bits2prm.c

; 70   :             value = add (value, 1);

  000ab	0f b7 f0	 movzx	 esi, ax
$LN3@Bin2int:

; 64   :     for (i = 0; i < no_of_bits; i++)

  000ae	4f		 dec	 edi
  000af	0f 85 63 ff ff
	ff		 jne	 $LL4@Bin2int

; 71   :     }
; 72   :     return (value);

  000b5	5f		 pop	 edi
  000b6	66 8b c6	 mov	 ax, si
  000b9	5b		 pop	 ebx
$LN2@Bin2int:
  000ba	5e		 pop	 esi

; 73   : }

  000bb	c3		 ret	 0
_Bin2int ENDP
_TEXT	ENDS
END
