; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	E:\mywork\client\PC2.0TRUNK\PC2.0\third_party\libAMRPlayer\AMR\copy.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	_Copy
; Function compile flags: /Ogtp
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\copy.c
;	COMDAT _Copy
_TEXT	SEGMENT
_L$ = 8							; size = 2
_Copy	PROC						; COMDAT
; _x$ = ecx
; _y$ = edx

; 57   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 58   :     Word16 i;
; 59   : 
; 60   :     for (i = 0; i < L; i++)

  00003	66 8b 45 08	 mov	 ax, WORD PTR _L$[ebp]
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	33 c9		 xor	 ecx, ecx
  0000c	66 3b c8	 cmp	 cx, ax
  0000f	7d 1d		 jge	 SHORT $LN1@Copy
  00011	2b f2		 sub	 esi, edx
  00013	0f b7 c8	 movzx	 ecx, ax
  00016	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$LL3@Copy:

; 61   :     {
; 62   :         y[i] = x[i];            move16 (); 

  00020	66 8b 04 16	 mov	 ax, WORD PTR [esi+edx]
  00024	8d 52 02	 lea	 edx, DWORD PTR [edx+2]
  00027	66 89 42 fe	 mov	 WORD PTR [edx-2], ax
  0002b	49		 dec	 ecx
  0002c	75 f2		 jne	 SHORT $LL3@Copy
$LN1@Copy:
  0002e	5e		 pop	 esi

; 63   :     }
; 64   : 
; 65   :     return;
; 66   : }

  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
_Copy	ENDP
_TEXT	ENDS
END
