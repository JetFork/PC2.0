; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	E:\mywork\client\PC2.0TRUNK\PC2.0\third_party\libAMRPlayer\AMR\lag_wind.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_lag_wind_id
CONST	SEGMENT
_lag_wind_id DB	'@(#)$Id $$Id $', 00H
	ORG $+1
_lag_h	DW	07fd8H
	DW	07f6bH
	DW	07eb6H
	DW	07dbbH
	DW	07c7bH
	DW	07af8H
	DW	07935H
	DW	07735H
	DW	074faH
	DW	07289H
_lag_l	DW	02e80H
	DW	04380H
	DW	07800H
	DW	06500H
	DW	05e80H
	DW	07140H
	DW	05f40H
	DW	01cc0H
	DW	04c40H
	DW	039c0H
CONST	ENDS
PUBLIC	_Lag_window
EXTRN	_L_Extract:PROC
EXTRN	_Mpy_32:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\lag_wind.c
;	COMDAT _Lag_window
_TEXT	SEGMENT
_x$ = -20						; size = 4
_i$ = -8						; size = 2
_m$ = 8							; size = 2
_r_h$ = 12						; size = 4
_r_l$ = 16						; size = 4
_Lag_window PROC					; COMDAT

; 63   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00012	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 64   :     Word16 i;
; 65   :     Word32 x;
; 66   : 
; 67   :     for (i = 1; i <= m; i++)

  0001e	b8 01 00 00 00	 mov	 eax, 1
  00023	66 89 45 f8	 mov	 WORD PTR _i$[ebp], ax
  00027	eb 0c		 jmp	 SHORT $LN3@Lag_window
$LN2@Lag_window:
  00029	66 8b 45 f8	 mov	 ax, WORD PTR _i$[ebp]
  0002d	66 83 c0 01	 add	 ax, 1
  00031	66 89 45 f8	 mov	 WORD PTR _i$[ebp], ax
$LN3@Lag_window:
  00035	0f bf 45 f8	 movsx	 eax, WORD PTR _i$[ebp]
  00039	0f bf 4d 08	 movsx	 ecx, WORD PTR _m$[ebp]
  0003d	3b c1		 cmp	 eax, ecx
  0003f	7f 61		 jg	 SHORT $LN4@Lag_window

; 68   :     {
; 69   :         x = Mpy_32 (r_h[i], r_l[i], lag_h[i - 1], lag_l[i - 1]);

  00041	0f bf 45 f8	 movsx	 eax, WORD PTR _i$[ebp]
  00045	0f b7 0c 45 fe
	ff ff ff	 movzx	 ecx, WORD PTR _lag_l[eax*2-2]
  0004d	51		 push	 ecx
  0004e	0f bf 55 f8	 movsx	 edx, WORD PTR _i$[ebp]
  00052	0f b7 04 55 fe
	ff ff ff	 movzx	 eax, WORD PTR _lag_h[edx*2-2]
  0005a	50		 push	 eax
  0005b	0f bf 4d f8	 movsx	 ecx, WORD PTR _i$[ebp]
  0005f	8b 55 10	 mov	 edx, DWORD PTR _r_l$[ebp]
  00062	0f b7 04 4a	 movzx	 eax, WORD PTR [edx+ecx*2]
  00066	50		 push	 eax
  00067	0f bf 4d f8	 movsx	 ecx, WORD PTR _i$[ebp]
  0006b	8b 55 0c	 mov	 edx, DWORD PTR _r_h$[ebp]
  0006e	0f b7 04 4a	 movzx	 eax, WORD PTR [edx+ecx*2]
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 _Mpy_32
  00078	83 c4 10	 add	 esp, 16			; 00000010H
  0007b	89 45 ec	 mov	 DWORD PTR _x$[ebp], eax

; 70   :         L_Extract (x, &r_h[i], &r_l[i]);

  0007e	0f bf 45 f8	 movsx	 eax, WORD PTR _i$[ebp]
  00082	8b 4d 10	 mov	 ecx, DWORD PTR _r_l$[ebp]
  00085	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  00088	52		 push	 edx
  00089	0f bf 45 f8	 movsx	 eax, WORD PTR _i$[ebp]
  0008d	8b 4d 0c	 mov	 ecx, DWORD PTR _r_h$[ebp]
  00090	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  00093	52		 push	 edx
  00094	8b 45 ec	 mov	 eax, DWORD PTR _x$[ebp]
  00097	50		 push	 eax
  00098	e8 00 00 00 00	 call	 _L_Extract
  0009d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 71   :     }

  000a0	eb 87		 jmp	 SHORT $LN2@Lag_window
$LN4@Lag_window:

; 72   :     return;
; 73   : }

  000a2	5f		 pop	 edi
  000a3	5e		 pop	 esi
  000a4	5b		 pop	 ebx
  000a5	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000ab	3b ec		 cmp	 ebp, esp
  000ad	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b2	8b e5		 mov	 esp, ebp
  000b4	5d		 pop	 ebp
  000b5	c3		 ret	 0
_Lag_window ENDP
_TEXT	ENDS
END
