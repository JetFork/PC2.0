; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	E:\mywork\client\PC2.0TRUNK\PC2.0\third_party\libAMRPlayer\AMR\set_zero.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_set_zero_id
CONST	SEGMENT
_set_zero_id DB	'@(#)$Id $$Id $', 00H
CONST	ENDS
PUBLIC	_Set_zero
EXTRN	_move16:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\set_zero.c
;	COMDAT _Set_zero
_TEXT	SEGMENT
_i$ = -8						; size = 2
_x$ = 8							; size = 4
_L$ = 12						; size = 2
_Set_zero PROC						; COMDAT

; 39   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 40   :     Word16 i;
; 41   : 
; 42   :     for (i = 0; i < L; i++)

  0001e	33 c0		 xor	 eax, eax
  00020	66 89 45 f8	 mov	 WORD PTR _i$[ebp], ax
  00024	eb 0c		 jmp	 SHORT $LN3@Set_zero
$LN2@Set_zero:
  00026	66 8b 45 f8	 mov	 ax, WORD PTR _i$[ebp]
  0002a	66 83 c0 01	 add	 ax, 1
  0002e	66 89 45 f8	 mov	 WORD PTR _i$[ebp], ax
$LN3@Set_zero:
  00032	0f bf 45 f8	 movsx	 eax, WORD PTR _i$[ebp]
  00036	0f bf 4d 0c	 movsx	 ecx, WORD PTR _L$[ebp]
  0003a	3b c1		 cmp	 eax, ecx
  0003c	7d 14		 jge	 SHORT $LN4@Set_zero

; 43   :     {
; 44   :         x[i] = 0;               move16 (); 

  0003e	0f bf 45 f8	 movsx	 eax, WORD PTR _i$[ebp]
  00042	33 c9		 xor	 ecx, ecx
  00044	8b 55 08	 mov	 edx, DWORD PTR _x$[ebp]
  00047	66 89 0c 42	 mov	 WORD PTR [edx+eax*2], cx
  0004b	e8 00 00 00 00	 call	 _move16

; 45   :     }

  00050	eb d4		 jmp	 SHORT $LN2@Set_zero
$LN4@Set_zero:

; 46   : 
; 47   :     return;
; 48   : }

  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5b		 pop	 ebx
  00055	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0005b	3b ec		 cmp	 ebp, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
_Set_zero ENDP
_TEXT	ENDS
END
