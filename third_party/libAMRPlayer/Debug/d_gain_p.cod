; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	E:\mywork\client\PC2.0TRUNK\PC2.0\third_party\libAMRPlayer\AMR\d_gain_p.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_d_gain_p_id
CONST	SEGMENT
_d_gain_p_id DB	'@(#)$Id $$Id $', 00H
	ORG $+1
_qua_gain_pitch DW 00H
	DW	0ccdH
	DW	0199cH
	DW	02000H
	DW	02666H
	DW	02ccdH
	DW	03000H
	DW	03333H
	DW	03666H
	DW	0399aH
	DW	03ccdH
	DW	04000H
	DW	04333H
	DW	04666H
	DW	0499aH
	DW	04ccdH
_qua_gain_code DW 09fH
	DW	0f140H
	DW	0a735H
	DW	0ceH
	DW	0f2beH
	DW	0b034H
	DW	010cH
	DW	0f443H
	DW	0b958H
	DW	015dH
	DW	0f5c9H
	DW	0c285H
	DW	01a3H
	DW	0f6d7H
	DW	0c8dfH
	DW	01e2H
	DW	0f7a6H
	DW	0cdbdH
	DW	022aH
	DW	0f874H
	DW	0d293H
	DW	027dH
	DW	0f942H
	DW	0d76dH
	DW	02ddH
	DW	0fa12H
	DW	0dc4dH
	DW	034aH
	DW	0fadeH
	DW	0e11eH
	DW	03c9H
	DW	0fbaeH
	DW	0e600H
	DW	045aH
	DW	0fc7cH
	DW	0ead8H
	DW	0501H
	DW	0fd4aH
	DW	0efb3H
	DW	05c1H
	DW	0fe19H
	DW	0f48dH
	DW	069eH
	DW	0fee7H
	DW	0f968H
	DW	079cH
	DW	0ffb5H
	DW	0fe43H
	DW	08c1H
	DW	085H
	DW	0321H
	DW	0a11H
	DW	0153H
	DW	07fcH
	DW	0b93H
	DW	0221H
	DW	0cd5H
	DW	0d50H
	DW	02f0H
	DW	011b2H
	DW	0f4fH
	DW	03beH
	DW	0168cH
	DW	0119bH
	DW	048dH
	DW	01b68H
	DW	0143fH
	DW	055bH
	DW	02043H
	DW	01748H
	DW	0629H
	DW	0251dH
	DW	01ac7H
	DW	06f8H
	DW	029f9H
	DW	01ecbH
	DW	07c7H
	DW	02ed4H
	DW	02369H
	DW	0895H
	DW	033afH
	DW	028b9H
	DW	0964H
	DW	0388aH
	DW	030deH
	DW	0a71H
	DW	03ee0H
	DW	03f87H
	DW	0bf4H
	DW	047fdH
	DW	05296H
	DW	0d78H
	DW	0511bH
	DW	06b5dH
	DW	0efcH
	DW	05a39H
CONST	ENDS
PUBLIC	_d_gain_pitch
EXTRN	_sub:PROC
EXTRN	_shl:PROC
EXTRN	_shr:PROC
EXTRN	_move16:PROC
EXTRN	_test:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File e:\mywork\client\pc2.0trunk\pc2.0\third_party\libamrplayer\amr\d_gain_p.c
;	COMDAT _d_gain_pitch
_TEXT	SEGMENT
_gain$ = -8						; size = 2
_mode$ = 8						; size = 4
_index$ = 12						; size = 2
_d_gain_pitch PROC					; COMDAT

; 64   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 65   :     Word16 gain;
; 66   : 
; 67   :     test ();

  0001e	e8 00 00 00 00	 call	 _test

; 68   :     if (sub(mode, MR122) == 0)

  00023	6a 07		 push	 7
  00025	0f b7 45 08	 movzx	 eax, WORD PTR _mode$[ebp]
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 _sub
  0002f	83 c4 08	 add	 esp, 8
  00032	0f bf c8	 movsx	 ecx, ax
  00035	85 c9		 test	 ecx, ecx
  00037	75 30		 jne	 SHORT $LN2@d_gain_pit

; 69   :     {
; 70   :        /* clear 2 LSBits */
; 71   :        gain = shl (shr (qua_gain_pitch[index], 2), 2);    move16 ();

  00039	6a 02		 push	 2
  0003b	6a 02		 push	 2
  0003d	0f bf 45 0c	 movsx	 eax, WORD PTR _index$[ebp]
  00041	0f b7 0c 45 00
	00 00 00	 movzx	 ecx, WORD PTR _qua_gain_pitch[eax*2]
  00049	51		 push	 ecx
  0004a	e8 00 00 00 00	 call	 _shr
  0004f	83 c4 08	 add	 esp, 8
  00052	0f b7 d0	 movzx	 edx, ax
  00055	52		 push	 edx
  00056	e8 00 00 00 00	 call	 _shl
  0005b	83 c4 08	 add	 esp, 8
  0005e	66 89 45 f8	 mov	 WORD PTR _gain$[ebp], ax
  00062	e8 00 00 00 00	 call	 _move16

; 72   :     }
; 73   :     else

  00067	eb 15		 jmp	 SHORT $LN1@d_gain_pit
$LN2@d_gain_pit:

; 74   :     {
; 75   :        gain = qua_gain_pitch[index];                      move16 (); 

  00069	0f bf 45 0c	 movsx	 eax, WORD PTR _index$[ebp]
  0006d	66 8b 0c 45 00
	00 00 00	 mov	 cx, WORD PTR _qua_gain_pitch[eax*2]
  00075	66 89 4d f8	 mov	 WORD PTR _gain$[ebp], cx
  00079	e8 00 00 00 00	 call	 _move16
$LN1@d_gain_pit:

; 76   :     }
; 77   :     
; 78   :     return gain;

  0007e	66 8b 45 f8	 mov	 ax, WORD PTR _gain$[ebp]

; 79   : }

  00082	5f		 pop	 edi
  00083	5e		 pop	 esi
  00084	5b		 pop	 ebx
  00085	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0008b	3b ec		 cmp	 ebp, esp
  0008d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c3		 ret	 0
_d_gain_pitch ENDP
_TEXT	ENDS
END
